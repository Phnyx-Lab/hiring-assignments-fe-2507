openapi: 3.0.0
info:
  title: Frontend Assignment Project API Specification
  description: APIs that provide text streaming and project CRUD functionality
  version: 25.07

servers:
  - url: "https://fovgrzavnazdgdoxzzan.supabase.co/functions/v1"
    description: Supabase-based backend server

paths:
  /answer:
    post:
      tags:
        - Streaming
      summary: Streaming response text based on queries
      description: Streams predefined text to the server at regular intervals, regardless of the request body.
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QueryInput'
      responses:
        '200':
          description: "Successful SSE stream response. Each event is JSON in the format data: {\"text\": \"...\"} in JSON format."
          content:
            text/event-stream:
              schema:
                $ref: '#/components/schemas/AnswerStreamChunk'
        '400':
          description: Invalid requests
        '405':
          description: Disallowed methods

  /project:
    get:
      tags:
        - Projects
      summary: Get a list of all projects
      description: Returns a list of all projects stored in the database.
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Project'
        '500':
          description: Server internal errors
    post:
      tags:
        - Projects
      summary: Create a new project
      description: Creates a new project and returns the ID of the created project.
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectNameInput'
      responses:
        '201':
          description: Successfully created
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
        '400':
          description: Invalid requests
        '500':
          description: Server internal errors
    patch:
      tags:
        - Projects
      summary: Edit the project name
      description: Modify the project name for the specified ID.
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectUpdateInput'
      responses:
        '200':
          description: Successfully fixed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessMessage'
        '400':
          description: Invalid requests
        '500':
          description: Server internal errors
    delete:
      tags:
        - Projects
      summary: Deleting a project
      description: Deletes a project with the specified ID.
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectIdInput'
      responses:
        '200':
          description: Successfully deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessMessage'
        '400':
          description: Invalid requests
        '500':
          description: Server internal errors

components:
  schemas:
    Project:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        created_at:
          type: string
          format: date-time
    QueryInput:
      type: object
      required:
        - query
      properties:
        query:
          type: string
          example: "Tell me about the supabase edge function."
    ProjectNameInput:
      type: object
      required:
        - name
      properties:
        name:
          type: string
          example: "New planning projects"
    ProjectIdInput:
      type: object
      required:
        - id
      properties:
        id:
          type: string
          format: uuid
          example: "123e4567-e89b-12d3-a456-426614174000"
    ProjectUpdateInput:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
    SuccessMessage:
      type: object
      properties:
        message:
          type: string
    Error:
      type: object
      properties:
        error:
          type: string
    AnswerStreamChunk:
      type: object
      properties:
        text:
          type: string
          example: "Text snippets"
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT